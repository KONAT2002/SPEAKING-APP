"use client";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Volume2, Mic } from "lucide-react";

const data = [
  { en: "Cheers, bro!", vn: "C·∫°n ly nh√© √¥ng b·∫°n!" },
  { en: "Let‚Äôs have a toast to a good day!", vn: "N√¢ng ly ch√∫c m·ª´ng m·ªôt ng√†y tuy·ªát v·ªùi!" },
  { en: "Bottoms up!", vn: "100% nha!" },
  { en: "Drink up!", vn: "U·ªëng ƒëi!" },
  { en: "You eat, I pour.", vn: "√îng ƒÉn ƒëi, tui r√≥t!" },
  { en: "Don‚Äôt let your glass go empty!", vn: "ƒê·ª´ng ƒë·ªÉ ly tr·ªëng nha!" },
  { en: "Slow down, man. It's not a race!", vn: "T·ª´ t·ª´ th√¥i √¥ng, ƒë√¢u ph·∫£i ch·∫°y ƒëua ƒë√¢u!" },
  { en: "Who's turn is it to pour?", vn: "T·ªõi l∆∞·ª£t ai r√≥t v·∫≠y?" },
  { en: "You always get funnier after a few drinks!", vn: "√îng c√†ng u·ªëng c√†ng m·∫∑n gh√™!" },
  { en: "I think you're already tipsy!", vn: "T√¥i nghƒ© √¥ng x·ªân nh·∫π r·ªìi ƒë√≥!" },
  { en: "Remember last time you danced after two beers?", vn: "Nh·ªõ l·∫ßn tr∆∞·ªõc √¥ng nh·∫£y sau 2 chai kh√¥ng?" },
  { en: "Don‚Äôt talk about work now, relax!", vn: "ƒê·ª´ng n√≥i chuy·ªán c√¥ng vi·ªác n·ªØa, x·∫£ h∆°i ƒëi!" },
  { en: "Last round and we call it a night.", vn: "U·ªëng ly cu·ªëi r·ªìi v·ªÅ nha." },
  { en: "Let‚Äôs grab some food before heading home.", vn: "Ki·∫øm g√¨ l√≥t b·ª•ng tr∆∞·ªõc khi v·ªÅ ƒëi." },
  { en: "Thanks for the good time, guys!", vn: "C·∫£m ∆°n m·∫•y √¥ng v√¨ bu·ªïi t·ªëi vui v·∫ª!" },
  { en: "Get home safe!", vn: "V·ªÅ nh√† an to√†n nha!" },
  { en: "Same time next week?", vn: "Tu·∫ßn sau nh·∫≠u ti·∫øp kh√¥ng?" },
  { en: "Hey! How‚Äôs everything going?", vn: "Ch√†o! D·∫°o n√†y m·ªçi th·ª© sao r·ªìi?" },
  { en: "Long time no see! How have you been?", vn: "L√¢u r·ªìi kh√¥ng g·∫∑p! D·∫°o n√†y sao r·ªìi?" },
  { en: "What‚Äôs up? Busy with work these days?", vn: "D·∫°o n√†y c√≥ g√¨ m·ªõi kh√¥ng? B·∫≠n r·ªôn v·ªõi c√¥ng vi·ªác h·∫£?" },
  { en: "Did you sleep well last night?", vn: "T·ªëi qua ng·ªß ngon kh√¥ng?" },
  { en: "You look tired today ‚Äì rough day?", vn: "H√¥m nay tr√¥ng b·∫°n m·ªát qu√° ‚Äì ng√†y l√†m vi·ªác cƒÉng √†?" },
  { en: "Let me know if you need a hand with that.", vn: "C·∫ßn gi√∫p g√¨ th√¨ n√≥i m√¨nh nha." },
  { en: "I‚Äôll send it over to you by lunch.", vn: "M√¨nh s·∫Ω g·ª≠i cho b·∫°n tr∆∞·ªõc gi·ªù tr∆∞a." },
  { en: "Can we go over this drawing together real quick?", vn: "M√¨nh xem nhanh b·∫£n v·∫Ω n√†y v·ªõi nhau ƒë∆∞·ª£c kh√¥ng?" },
  { en: "Do you want to grab a coffee after the meeting?", vn: "H·ªçp xong ƒëi u·ªëng c√† ph√™ kh√¥ng?" },
  { en: "We‚Äôre running a bit behind schedule, right?", vn: "M√¨nh h∆°i tr·ªÖ ti·∫øn ƒë·ªô ƒë√∫ng kh√¥ng?" },
  { en: "Thanks for taking the time to meet today.", vn: "C·∫£m ∆°n b·∫°n ƒë√£ d√†nh th·ªùi gian g·∫∑p h√¥m nay." },
  { en: "Let me walk you through the main specs.", vn: "ƒê·ªÉ m√¨nh gi·∫£i th√≠ch qua c√°c th√¥ng s·ªë ch√≠nh nha." },
  { en: "Hope that answers your question.", vn: "Hy v·ªçng ƒëi·ªÅu ƒë√≥ tr·∫£ l·ªùi ƒë∆∞·ª£c c√¢u h·ªèi c·ªßa b·∫°n." },
  { en: "Catch you later!", vn: "G·∫∑p l·∫°i sau nha!" },
  { en: "Let‚Äôs keep in touch.", vn: "Gi·ªØ li√™n l·∫°c nha." }
];

export default function SpeakingApp() {
  const [index, setIndex] = useState(0);
  const current = data[index];

  const speak = () => {
    const utterance = new SpeechSynthesisUtterance(current.en);
    utterance.lang = "en-US";
    speechSynthesis.speak(utterance);
  };

  const recordAndCompare = () => {
    alert("üé§ Ch·ª©c nƒÉng ghi √¢m & so s√°nh ph√°t √¢m ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn th√™m!");
  };

  const next = () => {
    setIndex((prev) => (prev + 1) % data.length);
  };

  return (
    <div className="p-6 max-w-xl mx-auto space-y-4">
      <Card>
        <CardContent className="p-6 space-y-3">
          <div className="text-xl font-semibold">{current.en}</div>
          <div className="text-gray-600">{current.vn}</div>
          <div className="flex flex-wrap gap-2 pt-2">
            <Button onClick={speak} variant="outline">
              <Volume2 className="w-4 h-4 mr-2" /> Nghe ph√°t √¢m
            </Button>
            <Button onClick={recordAndCompare} variant="outline">
              <Mic className="w-4 h-4 mr-2" /> Ghi √¢m & ki·ªÉm tra ph√°t √¢m
            </Button>
            <Button onClick={next} variant="default">
              C√¢u ti·∫øp theo
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
